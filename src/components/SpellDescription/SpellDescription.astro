---
import type { CollectionEntry } from "astro:content";
import { highlightSpecialParts } from "../highlightSpecialParts.ts";
import NonStringEntry from "./NonStringEntry.astro";

interface Props {
  entryList: CollectionEntry<"spells">["data"]["spell"][0]["entries"];
  entriesHigherLevelList: CollectionEntry<"spells">["data"]["spell"][0]["entriesHigherLevel"];
  isContaminated?: boolean;
  class?: string;
}

const {
  class: className,
  entryList,
  entriesHigherLevelList,
  isContaminated,
  ...rest
} = Astro.props;
---

<div class:list={[className]} {...rest}>
  <!-- TODO: maybe do something details and summary? -->
  {
    isContaminated ? (
      <p>
        <em>When you cast this spell, you gain 1 Contamination Level.</em>
      </p>
    ) : null
  }
  {
    entryList.map((entry) => {
      if (typeof entry === "string") {
        return <p set:html={highlightSpecialParts(entry)} />;
      }

      return <NonStringEntry entryListObject={entry} />;
    })
  }
  {
    entriesHigherLevelList !== undefined
      ? entriesHigherLevelList.map((entry) => (
          <NonStringEntry entryListObject={entry} />
        ))
      : null
  }
</div>
