---
import { type CollectionEntry } from "astro:content";

interface Props {
    spell: CollectionEntry<"spells">["data"]["spell"];
}
const { spell } = Astro.props;
---
<div class="spell-card">
    <p class="name">{spell.name}</p>
    <p class="school">School: {spell.school}</p>
    <div class="duration">
        <!--<p>{JSON.stringify(spell.duration, undefined, 2)}</p>-->
    </div>
    <div class="range">
        <!--<p>{JSON.stringify(spell.range, undefined, 2)}</p>-->
    </div>
    <div class="components">
        <!--<p>{JSON.stringify(spell.components, undefined, 2)}</p>-->
    </div>
    <div class="cost"></div>
    <div class="description">
        <!--
         {spell.entries.map((entry) => {
             if(typeof entry === "string") {
                 return <p>{entry}</p>
             } else {
                 return <p>{JSON.stringify(entry, undefined, 2)}</p>
             }
         })}
        -->
    </div>
</div>

<style>
    .spell-card {
        display: grid;
        grid-template-areas:
    "duration name range"
    "description description description"
    "components cost school";
        grid-template-columns: auto 1fr auto;
        grid-template-rows: auto 1fr auto;

    }

    .duration {
        grid-area: duration;
        overflow: auto;
        background: red;
        min-width: var(--size-16);
        min-height: var(--size-16);
    }

    .name {
        grid-area: name;
        overflow: auto;
        background: orange;
    }
    .range {
        grid-area: range;
        overflow: auto;
        background: blue;
        min-width: var(--size-16);
        min-height: var(--size-16);
    }
    .description {
        grid-area: description;
        overflow: auto;
        min-width: var(--size-16);
        min-height: var(--size-48);
    }
    .components {
        grid-area: components;
        overflow: auto;
        background: green;
        min-width: var(--size-16);
        min-height: var(--size-16);
    }
    .cost {
        grid-area: cost;
        overflow: auto;
        background: purple;
        min-width: var(--size-16);
        min-height: var(--size-16);
    }
    .school {
        grid-area: school;
        overflow: auto;
        background: yellow;
        min-width: var(--size-16);
        min-height: var(--size-16);
    }
</style>