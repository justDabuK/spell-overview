---
import BaseLayout from "../../layouts/BaseLayout.astro";

import { getCollection, type CollectionEntry } from "astro:content";
import SpellCard from "../../components/SpellCard.astro";

const spells = await getCollection("spells");
const spellList = spells.flatMap<CollectionEntry<"spells">["data"]["spell"]>((spellCollection: CollectionEntry<"spells">) => spellCollection.data.spell)
const fjordsSpellNameList = [
    "Elementalism",
    "Message",
    "Shillelagh",
    "Starry Wisp",
    "Thorn Whip",
    "Guidance",
    "Faerie Fire",
    "Healing Word",
    "Ice Knife",
    "Speak with Animals",
    "Thunderwave",
    "Aid",
    "Heat Metal",
    "Spike Growth",
    "Wither and Bloom",
]
const fjordsSpellList = spellList
    .filter((spell: CollectionEntry<"spells">["data"]["spell"]) => fjordsSpellNameList.includes(spell.name) && ["XPHB", "SCC"].includes(spell.source))
    .sort((a, b) => a.level - b.level || a.name.localeCompare(b.name))
const spellsAsString = JSON.stringify(fjordsSpellList, undefined, 2)
---
<BaseLayout>
    <h1>Spell list</h1>
    <div class="spell-card-layout">
        {fjordsSpellList.map((spell) => (<SpellCard spell={spell} />))}
    </div>
    <pre>{ spellsAsString }</pre>
</BaseLayout>

<style>
    .spell-card-layout {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(var(--size-384), 1fr));
        gap: var(--size-8);
    }
</style>